{
    "contents" : "---\ntitle: \"Reproducible Results - <BR>\nAnalysis of  NOAA Storm Database\"\nauthor: \"richdata\"\ndate: \"Tuesday, November 11, 2014\"\noutput: html_document\n---\n\n\n\n## Synopsis\nStorms and other severe weather events can cause both public health and economic problems for communities and municipalities. Many severe events can result in fatalities, injuries, and property damage, and preventing such outcomes to the extent possible is a key concern.\n\nThis project involves exploring the U.S. National Oceanic and Atmospheric Administration's (NOAA) storm database. This database tracks characteristics of major storms and weather events in the United States, including when and where they occur, as well as estimates of any fatalities, injuries, and property damage.\n\nThe basic goal of this assignment is to explore the NOAA Storm Database and answer two questions about severe weather events. \n\n1. Across the United States, which types of events (as indicated in the EVTYPE variable) are most harmful with respect to population health?\n2. Across the United States, which types of events have the greatest economic consequences?\n\n``` {r InitialSetup}\n#\n#install and load the ggplot2 package\n\ninstall.packages (\"ggplot2\")\nlibrary (ggplot2)\nlibrary (grid)  #needed for theme panel margin units\n\n#\n# Document the Software Environment to make it easily reproduced\n#\nsessionInfo ()\n\n```\n\n## Data Processing\n\n```{r getdata}\nsetwd (\"~/My Personal Stuff/coursera/Reproducible Research/Project2\")\n\n# if the data directory doesn't exist create it\n\nif (!file.exists(\"Data\")) {\n        dir.create(\"Data\")\n        }\n\n#if the data file doesn't exist, the download it\n\nif(!file.exists(\"Data/repdata-data-StormData.csv.bz2\")) {\n        fileURL <- \"http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2\"\n        download.file(fileURL, destfile = \"./Data/repdata-data-StormData.csv.bz2\")\n        fileNAME <- \"./Data/repdata-data-StormData.csv.bz2\"\n        }\n\nstormdata <- read.csv(bzfile(\"./data/repdata-data-StormData.csv.bz2\"))\n\n#strip out only data we're interested in\nstormdata <- stormdata [, c(\"EVTYPE\",\"FATALITIES\",\"INJURIES\",\"PROPDMG\",\"PROPDMGEXP\",\"CROPDMG\",\"CROPDMGEXP\")]\nhead (stormdata)\n\n```\n\n``` {r StormData Table, echo=FALSE}\n#Rough codebook found here: https://d396qusza40orc.cloudfront.net/repdata%2Fpeer2_doc%2Fpd01016005#curr. lists 48 Events.  Clean up the data making some assumptions as to what event goes where.\n#\n#2.1.1 Storm Data Event Table\n# Event Name Designator        Event Name Designator\n# Astronomical Low Tide Z      Hurricane (Typhoon) Z\n# Avalanche Z                  Ice Storm Z\n# Blizzard Z                   Lake-Effect Snow Z\n# Coastal Flood Z              Lakeshore Flood Z\n# Cold/Wind Chill Z            Lightning C\n# Debris Flow C                Marine Hail M\n# Dense Fog Z                  Marine High Wind M\n# Dense Smoke Z                Marine Strong Wind M \n# Drought Z                    Marine Thunderstorm Wind M\n# Dust Devil C                 Rip Current Z\n# Dust Storm Z                 Seiche Z\n# Excessive Heat Z             Sleet Z\n# Extreme Cold/Wind Chill Z    Storm Surge/Tide Z\n# Flash Flood C                Strong Wind Z\n# Flood C                      Thunderstorm Wind C\n# Frost/Freeze Z               Tornado C\n# Funnel Cloud C               Tropical Depression Z\n# Freezing Fog Z               Tropical Storm Z\n# Hail C                       Tsunami Z\n# Heat Z                       Volcanic Ash Z\n# Heavy Rain C                 Waterspout M\n# Heavy Snow Z                 Wildfire Z\n# High Surf Z                  Winter Storm Z\n# High Wind Z                  Winter Weather Z\n           \n\n \n \n \nLegend: There are three designators: C - County/Parish; Z - Zone; and M - Marine. (Refer to \nSection 2.4 to find instructions on how to designate Alaska Region events.) \n___________________________________________________________________________ \nTable 1. Storm Data Event Table\n```\n\n``` {r cleandata}\n# remove any rows that don't have any fatalities, injuries or damage\nstormdata <- stormdata[apply(stormdata[c(2,3,4,6)],1,function(z) any(z!=0)),] \n\n#make sure all datas are all upper case to normalize categories\n#for example Wintry mix, Wintry Mix and WINTRY MIX\nstormdata$EVTYPE <- as.factor (toupper (stormdata$EVTYPE))\n\n#\n#There are a bunch of Event Types that are obvious typos and variations \n#There are also far many events than the 48 called out in the Cookbook Table 2.1.1\n# located here: https://d396qusza40orc.cloudfront.net/repdata%2Fpeer2_doc%2Fpd01016005curr.pdf\n\n#Let's first consolidate and clean up a bit.\n\n# Create an AVALANCHE Group (mainly fix spelling error)\n#\nstormdata[grep(\"AVALANCE\",stormdata$EVTYPE),]$EVTYPE <- \"AVALANCHE\"\n#\n# Create a BLIZZARD Group\n#\nstormdata[grep(\"BLIZZARD\",stormdata$EVTYPE),]$EVTYPE <- \"BLIZZARD\"\n#\n# Create COASTAL FLOOD Group\n#\n#Put Coastal Surge into Storm Surge/Tide group instead of Coastal Flooding\nstormdata[grep(\"COASTAL SURGE\",stormdata$EVTYPE),]$EVTYPE <- \"STORM SURGE/TIDE\" \nstormdata[grep(\"COASTAL|BEACH EROSION|CSTL FLOOD|TIDAL FLOODING|ASTRONOMICAL HIGH TIDE\",stormdata$EVTYPE),]$EVTYPE <- \"COASTAL FLOOD\"\n#\n# Create a COLD Groups\n#\n#put COLD AIR TORNADO in the TORNADO GROUP\nstormdata[grep(\"COLD AIR TORNADO\",stormdata$EVTYPE),]$EVTYPE <- \"TORNADO\"\nstormdata[grep(\"^COLD|HYPOTHERMIA|LOW TEMPERATURE\",stormdata$EVTYPE),]$EVTYPE  <-\"COLD/WIND CHILL\"\nstormdata[grep(\" COLD|WINDCHILL|EXTREME WIND CHILL\",stormdata$EVTYPE),]$EVTYPE <- \"EXTREME COLD/WIND CHILL\"\n#\n# combine the FOG entries into DENSE FOG, except FREEZING FOG\nstormdata[grep(\"DENSE FOG|^FOG\",stormdata$EVTYPE),]$EVTYPE <- \"DENSE FOG\"\n#\n# combine the DROUGHT entries into one\nstormdata[grep(\"DROUGHT\",stormdata$EVTYPE),]$EVTYPE <- \"DROUGHT\"\n# Create DUST Events: Devil & Storm\n#\nstormdata[grep(\"DUST DEVIL\",stormdata$EVTYPE),]$EVTYPE <- \"DUST DEVIL\"\nstormdata[grep(\"DUST STORM|BLOWING DUST\",stormdata$EVTYPE),]$EVTYPE <- \"DUST STORM\"\n#\n# Group HEAT Events\n#\nstormdata[grep(\"HEAT WAVE|RECORD HEAT|RECORD/EXCESSIVE HEAT|EXTREME HEAT\",stormdata$EVTYPE),]$EVTYPE <- \"EXCESSIVE HEAT\"\nstormdata[grep(\"HYPERTHERMIA|WARM\",stormdata$EVTYPE),]$EVTYPE=\"HEAT\"\n#\n# combine the FLOOD Groups(FLASH-COMBINE FLash type events, FLOOD-All Other)\nstormdata[grep(\"FLASH|DAM BREAK|RAPIDLY RISING WATER\",stormdata$EVTYPE),]$EVTYPE <- \"FLASH FLOOD\"\nstormdata[grep(\"FLOODING|HIGH WATER|ICE JAM\",stormdata$EVTYPE),]$EVTYPE <- \"FLOOD\"\nstormdata[grep(\"RIVER FL|URBAN FL|RURAL FL|LAKE FL|STREAM FL\",stormdata$EVTYPE),]$EVTYPE<- \"FLOOD\"\nstormdata[grep(\"FLOODS|MAJOR FL|& FLOOD|AND FLOOD|FLOOD &\",stormdata$EVTYPE),]$EVTYPE <- \"FLOOD\"\nstormdata[grep(\"FLOOD/|/ FLOOD|LAKESHORE FL\",stormdata$EVTYPE),]$EVTYPE <- \"FLOOD\"\n#\n# Create FREEZE Group\n#\nstormdata[grep(\"FREEZE|FROST\",stormdata$EVTYPE),]$EVTYPE <- \"FROST/FREEZE\"\n#\n# Create HAIL Group\n#\nstormdata[grep(\"^HAIL|SMALL HAIL|/HAIL\",stormdata$EVTYPE),]$EVTYPE <- \"HAIL\"\n#\n# Create a HEAVY RAIN Group (INCLUDE HEAVY PERCIP BECAUSE DATA COMMENT DISCUSSES RAINFALL)\n#\nstormdata[grep(\"FREEZING RAIN\",stormdata$EVTYPE),]$EVTYPE <- \"WINTER WEATHER\"\nstormdata[grep(\"HEAVY RAIN|WETNESS|HEAVY SHOWER|HVY RAIN|HEAVY PRECIPITATION\",stormdata$EVTYPE),]$EVTYPE <- \"HEAVY RAIN\"\nstormdata[grep(\"RECORD RAIN|RAINSTORM|UNSEASONAL RAIN|EXCESSIVE RAIN|RAIN/\",stormdata$EVTYPE),]$EVTYPE <- \"HEAVY RAIN\"\nstormdata[grep(\"TORRENTIAL RAIN|WIND/RAIN\",stormdata$EVTYPE),]$EVTYPE <- \"HEAVY RAIN\"\n#\n# Create a HEAVY SNOW Group\n#\nstormdata[grep(\"HEAVY SNOW|RECORD SNOW|EXCESSIVE SNOW\",stormdata$EVTYPE),]$EVTYPE <- \"HEAVY SNOW\"\nstormdata[grep(\"HEAVY LAKE SNOW|LATE SEASON\",stormdata$EVTYPE),]$EVTYPE <- \"HEAVY SNOW\"\n#\n# Create a HIGH SURF Group (Put RIP CURRENTS/SURF into RIP CURRENTS FIRST)\n#\nstormdata[grep(\"RIP\",stormdata$EVTYPE),]$EVTYPE=\"RIP CURRENT\"\nstormdata[grep(\"SURF\",stormdata$EVTYPE),]$EVTYPE<-\"HIGH SURF\"\n#\n#\n# Create a HIGHWINDS\n#\n#raw data suggests this lone \"HIGH\" is high winds\nstormdata[stormdata$EVTYPE == \"HIGH\",]$EVTYPE <- \"HIGH WINDS\" \nstormdata[grep(\"^HIGH WIND|HIGH  WINDS\",stormdata$EVTYPE),]$EVTYPE <- \"HIGH WINDS\"\n\n\n\n\n\n#\n# Create a STRONG WINDS Group\nstormdata[grep(\"^WIND|GUSTY WIND|SEVERE TURBULENCE|^STRONG WIND|^GRADIENT\",stormdata$EVTYPE),]$EVTYPE<-\"STRONG WIND\"\n#\n# Create a ICE Group before snow because a snow only group would pull out ICE AND SNOW \n# assumption is if ICE is listed first, it is more impactful.\n#\nstormdata[grep(\"^ICE|^ICY|GLAZE|BLACK ICE|ICE STORM\",stormdata$EVTYPE),]$EVTYPE <- \"ICE STORM\"\n#\n#Create a WINTER WEATHER GROUP\n#\nstormdata[grep(\"WINTRY|WINTER WEATHER|WINTER STORM\",stormdata$EVTYPE),]$EVTYPE <- \"WINTER WEATHER\"\nstormdata[grep(\"HEAVY MIX|MIXED PRECIP|FREEZING SPRAY\",stormdata$EVTYPE),]$EVTYPE <- \"WINTER WEATHER\"\nstormdata[grep(\"RAIN/SNOW|FREEZING DRIZZLE\",stormdata$EVTYPE),]$EVTYPE <- \"WINTER WEATHER\"\n\n#\n# Create a TORNADO Group\n#\nstormdata[grep(\"POUT|TORNADO|TORNDAO\",stormdata$EVTYPE),]$EVTYPE <- \"TORNADO\"\n#\n# Create a FIRE Group \n#\nstormdata[grep(\"WILDFIRE|FIRE\",stormdata$EVTYPE),]$EVTYPE <- \"WILDFIRE\"\n#\n# Create Gusty WIND group\n#\nstormdata[grep(\"GUSTY WIND|GUSTNADO\",stormdata$EVTYPE),]$EVTYPE <- \"GUSTY WIND\"\n\n#\n# Create LANDSLIDE Group\n#\nstormdata[grep(\"SLIDE|LANDSLUMP\",stormdata$EVTYPE),]$EVTYPE <- \"LANDSLIDE\"\n\n#\n# Create LIGHTNING Group\n#\nstormdata[grep(\"LIGHTNING|LIGHTING|LIGNTNING\",stormdata$EVTYPE),]$EVTYPE <- \"LIGHTNING\"\n#\n# Create a THUNDERSTORM Group\n#\nstormdata[grep(\"THUNDER|TSTM|BURST|TUNDERSTORM|THUNERSTORM|THUDER|THUNDEER\",stormdata$EVTYPE),]$EVTYPE <- \"THUNDERSTORMS\"\n#\n# Consolidate all TROPICAL STORM \n#\nstormdata[grep(\"TROPICAL\",stormdata$EVTYPE),]$EVTYPE <- \"TROPICAL STORM\"\n\n#\n# Create a HURRICANE Group\n#\nstormdata[grep(\"HURRICANE|TYPHOON\",stormdata$EVTYPE),]$EVTYPE <- \"HURRICANE\"\n\n\n\n\n\n\n\n#\n# Create a SURF Group\n#\nstormdata[grep(\"URBAN\",stormdata$EVTYPE),]$EVTYPE=\"URBAN AND SMALL\"\n\n\n\n\n#\n# Finally, create an OTHER group for things that don't fit nicely\n\nstormdata[grep(\"\\\\?|APACHE|ASTRONOMICAL|DROWNING|MARINE|VOLCANIC\",stormdata$EVTYPE),]$EVTYPE <- \"OTHER\"\n\n\n```\n\n## Results\n\n``` {r harmful_report}\nfatalities <- aggregate(FATALITIES~EVTYPE,data=stormdata,FUN=sum)\nfatalities$Type <- \"Fatalities\"\ncolnames (fatalities) <- c(\"EVTYPE\",\"NUMBER\",\"Type\")\ninjuries   <- aggregate(INJURIES~EVTYPE,data=stormdata,FUN=sum)\ninjuries$Type <- \"Injuries\"\ncolnames(injuries) <- c(\"EVTYPE\",\"NUMBER\",\"Type\")\nbodilyharm <- rbind(fatalities,injuries)\nbodilyharm$Type <- as.factor(bodilyharm$Type)\n\n\n#\n# Plot the events that were harmful to the population\n#\n#create a line plot to show trend\ng<- ggplot (bodilyharm, aes(x=EVTYPE, y=NUMBER, fill=factor(Type)))\ng + geom_bar(position=\"stack\",stat=\"identity\")+ \n        labs(title=\"Event Types Harmful to Public Health\",fill=\"\",x=\"Event Type\",y=\"Number of Fatalities/Injuries\")+\n         theme(axis.text.x=element_text(angle=70,hjust=1))\n        \n\n\n\n```\n",
    "created" : 1415840236271.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "234533168",
    "id" : "A789910B",
    "lastKnownWriteTime" : 1416162780,
    "path" : "~/My Personal Stuff/coursera/Reproducible Research/Project2/PA2.Rmd",
    "project_path" : "PA2.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}